// This file was GENERATED by command:
//     pump.py container_literal_generated.h.pump
// DO NOT EDIT BY HAND!!!


// Copyright 2009 Google Inc. All Rights Reserved.
//
// Implements Container(e1, ..., en) and NewContainer(e1, ..., en) for
// creating and populating STL-style containers.  The non-template
// overloads are necessary for using C-string literals in Container()
// and NewContainer() without explicitly specifying the template type
// argument.

#ifndef UTIL_GTL_CONTAINER_LITERAL_GENERATED_H_
#define UTIL_GTL_CONTAINER_LITERAL_GENERATED_H_

#ifndef UTIL_GTL_CONTAINER_LITERAL_H_
#error "Do not #include container_literal_generated.h directly."
#error "It is meant to be #included by container_literal.h only."
#endif

namespace util {
namespace gtl {

template <typename T>
inline internal::ContainerImpl<T, 1> Container(const T& e1) {
  const T* elem_ptrs[1] = { &e1 };
  return internal::ContainerImpl<T, 1>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 1>
Container(const char* const& e1) {
  return Container<const char*>(e1);
}

template <typename T>
inline internal::ContainerImpl<T, 2> Container(const T& e1, const T& e2) {
  const T* elem_ptrs[2] = { &e1, &e2 };
  return internal::ContainerImpl<T, 2>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 2>
Container(const char* const& e1, const char* const& e2) {
  return Container<const char*>(e1, e2);
}

template <typename T>
inline internal::ContainerImpl<T, 3> Container(const T& e1, const T& e2,
    const T& e3) {
  const T* elem_ptrs[3] = { &e1, &e2, &e3 };
  return internal::ContainerImpl<T, 3>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 3>
Container(const char* const& e1, const char* const& e2, const char* const& e3) {
  return Container<const char*>(e1, e2, e3);
}

template <typename T>
inline internal::ContainerImpl<T, 4> Container(const T& e1, const T& e2,
    const T& e3, const T& e4) {
  const T* elem_ptrs[4] = { &e1, &e2, &e3, &e4 };
  return internal::ContainerImpl<T, 4>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 4>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4) {
  return Container<const char*>(e1, e2, e3, e4);
}

template <typename T>
inline internal::ContainerImpl<T, 5> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5) {
  const T* elem_ptrs[5] = { &e1, &e2, &e3, &e4, &e5 };
  return internal::ContainerImpl<T, 5>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 5>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5) {
  return Container<const char*>(e1, e2, e3, e4, e5);
}

template <typename T>
inline internal::ContainerImpl<T, 6> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6) {
  const T* elem_ptrs[6] = { &e1, &e2, &e3, &e4, &e5, &e6 };
  return internal::ContainerImpl<T, 6>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 6>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6);
}

template <typename T>
inline internal::ContainerImpl<T, 7> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7) {
  const T* elem_ptrs[7] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7 };
  return internal::ContainerImpl<T, 7>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 7>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7);
}

template <typename T>
inline internal::ContainerImpl<T, 8> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8) {
  const T* elem_ptrs[8] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8 };
  return internal::ContainerImpl<T, 8>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 8>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8);
}

template <typename T>
inline internal::ContainerImpl<T, 9> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9) {
  const T* elem_ptrs[9] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9 };
  return internal::ContainerImpl<T, 9>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 9>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9);
}

template <typename T>
inline internal::ContainerImpl<T, 10> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10) {
  const T* elem_ptrs[10] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9,
      &e10 };
  return internal::ContainerImpl<T, 10>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 10>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10);
}

template <typename T>
inline internal::ContainerImpl<T, 11> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11) {
  const T* elem_ptrs[11] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11 };
  return internal::ContainerImpl<T, 11>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 11>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11);
}

template <typename T>
inline internal::ContainerImpl<T, 12> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12) {
  const T* elem_ptrs[12] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12 };
  return internal::ContainerImpl<T, 12>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 12>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12);
}

template <typename T>
inline internal::ContainerImpl<T, 13> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13) {
  const T* elem_ptrs[13] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13 };
  return internal::ContainerImpl<T, 13>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 13>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13);
}

template <typename T>
inline internal::ContainerImpl<T, 14> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14) {
  const T* elem_ptrs[14] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14 };
  return internal::ContainerImpl<T, 14>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 14>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14);
}

template <typename T>
inline internal::ContainerImpl<T, 15> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15) {
  const T* elem_ptrs[15] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15 };
  return internal::ContainerImpl<T, 15>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 15>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15);
}

template <typename T>
inline internal::ContainerImpl<T, 16> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16) {
  const T* elem_ptrs[16] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16 };
  return internal::ContainerImpl<T, 16>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 16>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16);
}

template <typename T>
inline internal::ContainerImpl<T, 17> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17) {
  const T* elem_ptrs[17] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17 };
  return internal::ContainerImpl<T, 17>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 17>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17);
}

template <typename T>
inline internal::ContainerImpl<T, 18> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18) {
  const T* elem_ptrs[18] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18 };
  return internal::ContainerImpl<T, 18>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 18>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18);
}

template <typename T>
inline internal::ContainerImpl<T, 19> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19) {
  const T* elem_ptrs[19] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19 };
  return internal::ContainerImpl<T, 19>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 19>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19);
}

template <typename T>
inline internal::ContainerImpl<T, 20> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20) {
  const T* elem_ptrs[20] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20 };
  return internal::ContainerImpl<T, 20>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 20>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20);
}

template <typename T>
inline internal::ContainerImpl<T, 21> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21) {
  const T* elem_ptrs[21] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21 };
  return internal::ContainerImpl<T, 21>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 21>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21);
}

template <typename T>
inline internal::ContainerImpl<T, 22> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22) {
  const T* elem_ptrs[22] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22 };
  return internal::ContainerImpl<T, 22>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 22>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22);
}

template <typename T>
inline internal::ContainerImpl<T, 23> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23) {
  const T* elem_ptrs[23] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23 };
  return internal::ContainerImpl<T, 23>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 23>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23);
}

template <typename T>
inline internal::ContainerImpl<T, 24> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24) {
  const T* elem_ptrs[24] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24 };
  return internal::ContainerImpl<T, 24>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 24>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24);
}

template <typename T>
inline internal::ContainerImpl<T, 25> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25) {
  const T* elem_ptrs[25] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25 };
  return internal::ContainerImpl<T, 25>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 25>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25);
}

template <typename T>
inline internal::ContainerImpl<T, 26> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26) {
  const T* elem_ptrs[26] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26 };
  return internal::ContainerImpl<T, 26>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 26>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26);
}

template <typename T>
inline internal::ContainerImpl<T, 27> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27) {
  const T* elem_ptrs[27] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27 };
  return internal::ContainerImpl<T, 27>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 27>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27);
}

template <typename T>
inline internal::ContainerImpl<T, 28> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28) {
  const T* elem_ptrs[28] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28 };
  return internal::ContainerImpl<T, 28>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 28>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28);
}

template <typename T>
inline internal::ContainerImpl<T, 29> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29) {
  const T* elem_ptrs[29] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29 };
  return internal::ContainerImpl<T, 29>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 29>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29);
}

template <typename T>
inline internal::ContainerImpl<T, 30> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30) {
  const T* elem_ptrs[30] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30 };
  return internal::ContainerImpl<T, 30>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 30>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30);
}

template <typename T>
inline internal::ContainerImpl<T, 31> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31) {
  const T* elem_ptrs[31] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31 };
  return internal::ContainerImpl<T, 31>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 31>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31);
}

template <typename T>
inline internal::ContainerImpl<T, 32> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32) {
  const T* elem_ptrs[32] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32 };
  return internal::ContainerImpl<T, 32>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 32>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32);
}

template <typename T>
inline internal::ContainerImpl<T, 33> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33) {
  const T* elem_ptrs[33] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33 };
  return internal::ContainerImpl<T, 33>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 33>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33);
}

template <typename T>
inline internal::ContainerImpl<T, 34> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34) {
  const T* elem_ptrs[34] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34 };
  return internal::ContainerImpl<T, 34>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 34>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34);
}

template <typename T>
inline internal::ContainerImpl<T, 35> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35) {
  const T* elem_ptrs[35] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35 };
  return internal::ContainerImpl<T, 35>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 35>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35);
}

template <typename T>
inline internal::ContainerImpl<T, 36> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36) {
  const T* elem_ptrs[36] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36 };
  return internal::ContainerImpl<T, 36>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 36>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36);
}

template <typename T>
inline internal::ContainerImpl<T, 37> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37) {
  const T* elem_ptrs[37] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37 };
  return internal::ContainerImpl<T, 37>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 37>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37);
}

template <typename T>
inline internal::ContainerImpl<T, 38> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38) {
  const T* elem_ptrs[38] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38 };
  return internal::ContainerImpl<T, 38>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 38>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38);
}

template <typename T>
inline internal::ContainerImpl<T, 39> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39) {
  const T* elem_ptrs[39] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39 };
  return internal::ContainerImpl<T, 39>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 39>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38, const char* const& e39) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39);
}

template <typename T>
inline internal::ContainerImpl<T, 40> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40) {
  const T* elem_ptrs[40] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40 };
  return internal::ContainerImpl<T, 40>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 40>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38, const char* const& e39,
    const char* const& e40) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39,
      e40);
}

template <typename T>
inline internal::ContainerImpl<T, 41> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41) {
  const T* elem_ptrs[41] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41 };
  return internal::ContainerImpl<T, 41>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 41>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38, const char* const& e39,
    const char* const& e40, const char* const& e41) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39,
      e40, e41);
}

template <typename T>
inline internal::ContainerImpl<T, 42> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42) {
  const T* elem_ptrs[42] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42 };
  return internal::ContainerImpl<T, 42>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 42>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38, const char* const& e39,
    const char* const& e40, const char* const& e41, const char* const& e42) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39,
      e40, e41, e42);
}

template <typename T>
inline internal::ContainerImpl<T, 43> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43) {
  const T* elem_ptrs[43] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43 };
  return internal::ContainerImpl<T, 43>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 43>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38, const char* const& e39,
    const char* const& e40, const char* const& e41, const char* const& e42,
    const char* const& e43) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39,
      e40, e41, e42, e43);
}

template <typename T>
inline internal::ContainerImpl<T, 44> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44) {
  const T* elem_ptrs[44] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44 };
  return internal::ContainerImpl<T, 44>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 44>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38, const char* const& e39,
    const char* const& e40, const char* const& e41, const char* const& e42,
    const char* const& e43, const char* const& e44) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39,
      e40, e41, e42, e43, e44);
}

template <typename T>
inline internal::ContainerImpl<T, 45> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45) {
  const T* elem_ptrs[45] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45 };
  return internal::ContainerImpl<T, 45>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 45>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38, const char* const& e39,
    const char* const& e40, const char* const& e41, const char* const& e42,
    const char* const& e43, const char* const& e44, const char* const& e45) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39,
      e40, e41, e42, e43, e44, e45);
}

template <typename T>
inline internal::ContainerImpl<T, 46> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46) {
  const T* elem_ptrs[46] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46 };
  return internal::ContainerImpl<T, 46>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 46>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38, const char* const& e39,
    const char* const& e40, const char* const& e41, const char* const& e42,
    const char* const& e43, const char* const& e44, const char* const& e45,
    const char* const& e46) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39,
      e40, e41, e42, e43, e44, e45, e46);
}

template <typename T>
inline internal::ContainerImpl<T, 47> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47) {
  const T* elem_ptrs[47] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47 };
  return internal::ContainerImpl<T, 47>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 47>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38, const char* const& e39,
    const char* const& e40, const char* const& e41, const char* const& e42,
    const char* const& e43, const char* const& e44, const char* const& e45,
    const char* const& e46, const char* const& e47) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39,
      e40, e41, e42, e43, e44, e45, e46, e47);
}

template <typename T>
inline internal::ContainerImpl<T, 48> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48) {
  const T* elem_ptrs[48] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48 };
  return internal::ContainerImpl<T, 48>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 48>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38, const char* const& e39,
    const char* const& e40, const char* const& e41, const char* const& e42,
    const char* const& e43, const char* const& e44, const char* const& e45,
    const char* const& e46, const char* const& e47, const char* const& e48) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39,
      e40, e41, e42, e43, e44, e45, e46, e47, e48);
}

template <typename T>
inline internal::ContainerImpl<T, 49> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49) {
  const T* elem_ptrs[49] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49 };
  return internal::ContainerImpl<T, 49>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 49>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38, const char* const& e39,
    const char* const& e40, const char* const& e41, const char* const& e42,
    const char* const& e43, const char* const& e44, const char* const& e45,
    const char* const& e46, const char* const& e47, const char* const& e48,
    const char* const& e49) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39,
      e40, e41, e42, e43, e44, e45, e46, e47, e48, e49);
}

template <typename T>
inline internal::ContainerImpl<T, 50> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50) {
  const T* elem_ptrs[50] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50 };
  return internal::ContainerImpl<T, 50>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 50>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38, const char* const& e39,
    const char* const& e40, const char* const& e41, const char* const& e42,
    const char* const& e43, const char* const& e44, const char* const& e45,
    const char* const& e46, const char* const& e47, const char* const& e48,
    const char* const& e49, const char* const& e50) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39,
      e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50);
}

template <typename T>
inline internal::ContainerImpl<T, 51> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51) {
  const T* elem_ptrs[51] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51 };
  return internal::ContainerImpl<T, 51>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 51>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38, const char* const& e39,
    const char* const& e40, const char* const& e41, const char* const& e42,
    const char* const& e43, const char* const& e44, const char* const& e45,
    const char* const& e46, const char* const& e47, const char* const& e48,
    const char* const& e49, const char* const& e50, const char* const& e51) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39,
      e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51);
}

template <typename T>
inline internal::ContainerImpl<T, 52> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51, const T& e52) {
  const T* elem_ptrs[52] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51, &e52 };
  return internal::ContainerImpl<T, 52>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 52>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38, const char* const& e39,
    const char* const& e40, const char* const& e41, const char* const& e42,
    const char* const& e43, const char* const& e44, const char* const& e45,
    const char* const& e46, const char* const& e47, const char* const& e48,
    const char* const& e49, const char* const& e50, const char* const& e51,
    const char* const& e52) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39,
      e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52);
}

template <typename T>
inline internal::ContainerImpl<T, 53> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51, const T& e52,
    const T& e53) {
  const T* elem_ptrs[53] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51, &e52, &e53 };
  return internal::ContainerImpl<T, 53>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 53>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38, const char* const& e39,
    const char* const& e40, const char* const& e41, const char* const& e42,
    const char* const& e43, const char* const& e44, const char* const& e45,
    const char* const& e46, const char* const& e47, const char* const& e48,
    const char* const& e49, const char* const& e50, const char* const& e51,
    const char* const& e52, const char* const& e53) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39,
      e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52, e53);
}

template <typename T>
inline internal::ContainerImpl<T, 54> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51, const T& e52,
    const T& e53, const T& e54) {
  const T* elem_ptrs[54] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51, &e52, &e53, &e54 };
  return internal::ContainerImpl<T, 54>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 54>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38, const char* const& e39,
    const char* const& e40, const char* const& e41, const char* const& e42,
    const char* const& e43, const char* const& e44, const char* const& e45,
    const char* const& e46, const char* const& e47, const char* const& e48,
    const char* const& e49, const char* const& e50, const char* const& e51,
    const char* const& e52, const char* const& e53, const char* const& e54) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39,
      e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52, e53,
      e54);
}

template <typename T>
inline internal::ContainerImpl<T, 55> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51, const T& e52,
    const T& e53, const T& e54, const T& e55) {
  const T* elem_ptrs[55] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51, &e52, &e53, &e54, &e55 };
  return internal::ContainerImpl<T, 55>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 55>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38, const char* const& e39,
    const char* const& e40, const char* const& e41, const char* const& e42,
    const char* const& e43, const char* const& e44, const char* const& e45,
    const char* const& e46, const char* const& e47, const char* const& e48,
    const char* const& e49, const char* const& e50, const char* const& e51,
    const char* const& e52, const char* const& e53, const char* const& e54,
    const char* const& e55) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39,
      e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52, e53,
      e54, e55);
}

template <typename T>
inline internal::ContainerImpl<T, 56> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51, const T& e52,
    const T& e53, const T& e54, const T& e55, const T& e56) {
  const T* elem_ptrs[56] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51, &e52, &e53, &e54, &e55, &e56 };
  return internal::ContainerImpl<T, 56>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 56>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38, const char* const& e39,
    const char* const& e40, const char* const& e41, const char* const& e42,
    const char* const& e43, const char* const& e44, const char* const& e45,
    const char* const& e46, const char* const& e47, const char* const& e48,
    const char* const& e49, const char* const& e50, const char* const& e51,
    const char* const& e52, const char* const& e53, const char* const& e54,
    const char* const& e55, const char* const& e56) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39,
      e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52, e53,
      e54, e55, e56);
}

template <typename T>
inline internal::ContainerImpl<T, 57> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51, const T& e52,
    const T& e53, const T& e54, const T& e55, const T& e56, const T& e57) {
  const T* elem_ptrs[57] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51, &e52, &e53, &e54, &e55, &e56, &e57 };
  return internal::ContainerImpl<T, 57>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 57>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38, const char* const& e39,
    const char* const& e40, const char* const& e41, const char* const& e42,
    const char* const& e43, const char* const& e44, const char* const& e45,
    const char* const& e46, const char* const& e47, const char* const& e48,
    const char* const& e49, const char* const& e50, const char* const& e51,
    const char* const& e52, const char* const& e53, const char* const& e54,
    const char* const& e55, const char* const& e56, const char* const& e57) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39,
      e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52, e53,
      e54, e55, e56, e57);
}

template <typename T>
inline internal::ContainerImpl<T, 58> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51, const T& e52,
    const T& e53, const T& e54, const T& e55, const T& e56, const T& e57,
    const T& e58) {
  const T* elem_ptrs[58] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51, &e52, &e53, &e54, &e55, &e56, &e57, &e58 };
  return internal::ContainerImpl<T, 58>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 58>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38, const char* const& e39,
    const char* const& e40, const char* const& e41, const char* const& e42,
    const char* const& e43, const char* const& e44, const char* const& e45,
    const char* const& e46, const char* const& e47, const char* const& e48,
    const char* const& e49, const char* const& e50, const char* const& e51,
    const char* const& e52, const char* const& e53, const char* const& e54,
    const char* const& e55, const char* const& e56, const char* const& e57,
    const char* const& e58) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39,
      e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52, e53,
      e54, e55, e56, e57, e58);
}

template <typename T>
inline internal::ContainerImpl<T, 59> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51, const T& e52,
    const T& e53, const T& e54, const T& e55, const T& e56, const T& e57,
    const T& e58, const T& e59) {
  const T* elem_ptrs[59] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51, &e52, &e53, &e54, &e55, &e56, &e57, &e58,
      &e59 };
  return internal::ContainerImpl<T, 59>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 59>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38, const char* const& e39,
    const char* const& e40, const char* const& e41, const char* const& e42,
    const char* const& e43, const char* const& e44, const char* const& e45,
    const char* const& e46, const char* const& e47, const char* const& e48,
    const char* const& e49, const char* const& e50, const char* const& e51,
    const char* const& e52, const char* const& e53, const char* const& e54,
    const char* const& e55, const char* const& e56, const char* const& e57,
    const char* const& e58, const char* const& e59) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39,
      e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52, e53,
      e54, e55, e56, e57, e58, e59);
}

template <typename T>
inline internal::ContainerImpl<T, 60> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51, const T& e52,
    const T& e53, const T& e54, const T& e55, const T& e56, const T& e57,
    const T& e58, const T& e59, const T& e60) {
  const T* elem_ptrs[60] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51, &e52, &e53, &e54, &e55, &e56, &e57, &e58,
      &e59, &e60 };
  return internal::ContainerImpl<T, 60>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 60>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38, const char* const& e39,
    const char* const& e40, const char* const& e41, const char* const& e42,
    const char* const& e43, const char* const& e44, const char* const& e45,
    const char* const& e46, const char* const& e47, const char* const& e48,
    const char* const& e49, const char* const& e50, const char* const& e51,
    const char* const& e52, const char* const& e53, const char* const& e54,
    const char* const& e55, const char* const& e56, const char* const& e57,
    const char* const& e58, const char* const& e59, const char* const& e60) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39,
      e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52, e53,
      e54, e55, e56, e57, e58, e59, e60);
}

template <typename T>
inline internal::ContainerImpl<T, 61> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51, const T& e52,
    const T& e53, const T& e54, const T& e55, const T& e56, const T& e57,
    const T& e58, const T& e59, const T& e60, const T& e61) {
  const T* elem_ptrs[61] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51, &e52, &e53, &e54, &e55, &e56, &e57, &e58,
      &e59, &e60, &e61 };
  return internal::ContainerImpl<T, 61>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 61>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38, const char* const& e39,
    const char* const& e40, const char* const& e41, const char* const& e42,
    const char* const& e43, const char* const& e44, const char* const& e45,
    const char* const& e46, const char* const& e47, const char* const& e48,
    const char* const& e49, const char* const& e50, const char* const& e51,
    const char* const& e52, const char* const& e53, const char* const& e54,
    const char* const& e55, const char* const& e56, const char* const& e57,
    const char* const& e58, const char* const& e59, const char* const& e60,
    const char* const& e61) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39,
      e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52, e53,
      e54, e55, e56, e57, e58, e59, e60, e61);
}

template <typename T>
inline internal::ContainerImpl<T, 62> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51, const T& e52,
    const T& e53, const T& e54, const T& e55, const T& e56, const T& e57,
    const T& e58, const T& e59, const T& e60, const T& e61, const T& e62) {
  const T* elem_ptrs[62] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51, &e52, &e53, &e54, &e55, &e56, &e57, &e58,
      &e59, &e60, &e61, &e62 };
  return internal::ContainerImpl<T, 62>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 62>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38, const char* const& e39,
    const char* const& e40, const char* const& e41, const char* const& e42,
    const char* const& e43, const char* const& e44, const char* const& e45,
    const char* const& e46, const char* const& e47, const char* const& e48,
    const char* const& e49, const char* const& e50, const char* const& e51,
    const char* const& e52, const char* const& e53, const char* const& e54,
    const char* const& e55, const char* const& e56, const char* const& e57,
    const char* const& e58, const char* const& e59, const char* const& e60,
    const char* const& e61, const char* const& e62) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39,
      e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52, e53,
      e54, e55, e56, e57, e58, e59, e60, e61, e62);
}

template <typename T>
inline internal::ContainerImpl<T, 63> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51, const T& e52,
    const T& e53, const T& e54, const T& e55, const T& e56, const T& e57,
    const T& e58, const T& e59, const T& e60, const T& e61, const T& e62,
    const T& e63) {
  const T* elem_ptrs[63] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51, &e52, &e53, &e54, &e55, &e56, &e57, &e58,
      &e59, &e60, &e61, &e62, &e63 };
  return internal::ContainerImpl<T, 63>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 63>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38, const char* const& e39,
    const char* const& e40, const char* const& e41, const char* const& e42,
    const char* const& e43, const char* const& e44, const char* const& e45,
    const char* const& e46, const char* const& e47, const char* const& e48,
    const char* const& e49, const char* const& e50, const char* const& e51,
    const char* const& e52, const char* const& e53, const char* const& e54,
    const char* const& e55, const char* const& e56, const char* const& e57,
    const char* const& e58, const char* const& e59, const char* const& e60,
    const char* const& e61, const char* const& e62, const char* const& e63) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39,
      e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52, e53,
      e54, e55, e56, e57, e58, e59, e60, e61, e62, e63);
}

template <typename T>
inline internal::ContainerImpl<T, 64> Container(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51, const T& e52,
    const T& e53, const T& e54, const T& e55, const T& e56, const T& e57,
    const T& e58, const T& e59, const T& e60, const T& e61, const T& e62,
    const T& e63, const T& e64) {
  const T* elem_ptrs[64] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51, &e52, &e53, &e54, &e55, &e56, &e57, &e58,
      &e59, &e60, &e61, &e62, &e63, &e64 };
  return internal::ContainerImpl<T, 64>(elem_ptrs);
}

inline internal::ContainerImpl<const char*, 64>
Container(const char* const& e1, const char* const& e2, const char* const& e3,
    const char* const& e4, const char* const& e5, const char* const& e6,
    const char* const& e7, const char* const& e8, const char* const& e9,
    const char* const& e10, const char* const& e11, const char* const& e12,
    const char* const& e13, const char* const& e14, const char* const& e15,
    const char* const& e16, const char* const& e17, const char* const& e18,
    const char* const& e19, const char* const& e20, const char* const& e21,
    const char* const& e22, const char* const& e23, const char* const& e24,
    const char* const& e25, const char* const& e26, const char* const& e27,
    const char* const& e28, const char* const& e29, const char* const& e30,
    const char* const& e31, const char* const& e32, const char* const& e33,
    const char* const& e34, const char* const& e35, const char* const& e36,
    const char* const& e37, const char* const& e38, const char* const& e39,
    const char* const& e40, const char* const& e41, const char* const& e42,
    const char* const& e43, const char* const& e44, const char* const& e45,
    const char* const& e46, const char* const& e47, const char* const& e48,
    const char* const& e49, const char* const& e50, const char* const& e51,
    const char* const& e52, const char* const& e53, const char* const& e54,
    const char* const& e55, const char* const& e56, const char* const& e57,
    const char* const& e58, const char* const& e59, const char* const& e60,
    const char* const& e61, const char* const& e62, const char* const& e63,
    const char* const& e64) {
  return Container<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11,
      e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25,
      e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39,
      e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52, e53,
      e54, e55, e56, e57, e58, e59, e60, e61, e62, e63, e64);
}

template <typename T>
inline internal::NewContainerImpl<T, 1> NewContainer(const T& e1) {
  const T* elem_ptrs[1] = { &e1 };
  return internal::NewContainerImpl<T, 1>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 1>
NewContainer(const char* const& e1) {
  return NewContainer<const char*>(e1);
}

template <typename T>
inline internal::NewContainerImpl<T, 2> NewContainer(const T& e1, const T& e2) {
  const T* elem_ptrs[2] = { &e1, &e2 };
  return internal::NewContainerImpl<T, 2>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 2>
NewContainer(const char* const& e1, const char* const& e2) {
  return NewContainer<const char*>(e1, e2);
}

template <typename T>
inline internal::NewContainerImpl<T, 3> NewContainer(const T& e1, const T& e2,
    const T& e3) {
  const T* elem_ptrs[3] = { &e1, &e2, &e3 };
  return internal::NewContainerImpl<T, 3>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 3>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3) {
  return NewContainer<const char*>(e1, e2, e3);
}

template <typename T>
inline internal::NewContainerImpl<T, 4> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4) {
  const T* elem_ptrs[4] = { &e1, &e2, &e3, &e4 };
  return internal::NewContainerImpl<T, 4>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 4>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4) {
  return NewContainer<const char*>(e1, e2, e3, e4);
}

template <typename T>
inline internal::NewContainerImpl<T, 5> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5) {
  const T* elem_ptrs[5] = { &e1, &e2, &e3, &e4, &e5 };
  return internal::NewContainerImpl<T, 5>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 5>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5);
}

template <typename T>
inline internal::NewContainerImpl<T, 6> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6) {
  const T* elem_ptrs[6] = { &e1, &e2, &e3, &e4, &e5, &e6 };
  return internal::NewContainerImpl<T, 6>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 6>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6);
}

template <typename T>
inline internal::NewContainerImpl<T, 7> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7) {
  const T* elem_ptrs[7] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7 };
  return internal::NewContainerImpl<T, 7>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 7>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7);
}

template <typename T>
inline internal::NewContainerImpl<T, 8> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8) {
  const T* elem_ptrs[8] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8 };
  return internal::NewContainerImpl<T, 8>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 8>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8);
}

template <typename T>
inline internal::NewContainerImpl<T, 9> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9) {
  const T* elem_ptrs[9] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9 };
  return internal::NewContainerImpl<T, 9>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 9>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9);
}

template <typename T>
inline internal::NewContainerImpl<T, 10> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10) {
  const T* elem_ptrs[10] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9,
      &e10 };
  return internal::NewContainerImpl<T, 10>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 10>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10);
}

template <typename T>
inline internal::NewContainerImpl<T, 11> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11) {
  const T* elem_ptrs[11] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11 };
  return internal::NewContainerImpl<T, 11>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 11>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11);
}

template <typename T>
inline internal::NewContainerImpl<T, 12> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12) {
  const T* elem_ptrs[12] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12 };
  return internal::NewContainerImpl<T, 12>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 12>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12);
}

template <typename T>
inline internal::NewContainerImpl<T, 13> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13) {
  const T* elem_ptrs[13] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13 };
  return internal::NewContainerImpl<T, 13>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 13>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13);
}

template <typename T>
inline internal::NewContainerImpl<T, 14> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14) {
  const T* elem_ptrs[14] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14 };
  return internal::NewContainerImpl<T, 14>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 14>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14);
}

template <typename T>
inline internal::NewContainerImpl<T, 15> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15) {
  const T* elem_ptrs[15] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15 };
  return internal::NewContainerImpl<T, 15>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 15>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15);
}

template <typename T>
inline internal::NewContainerImpl<T, 16> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16) {
  const T* elem_ptrs[16] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16 };
  return internal::NewContainerImpl<T, 16>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 16>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16);
}

template <typename T>
inline internal::NewContainerImpl<T, 17> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17) {
  const T* elem_ptrs[17] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17 };
  return internal::NewContainerImpl<T, 17>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 17>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17);
}

template <typename T>
inline internal::NewContainerImpl<T, 18> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18) {
  const T* elem_ptrs[18] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18 };
  return internal::NewContainerImpl<T, 18>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 18>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18);
}

template <typename T>
inline internal::NewContainerImpl<T, 19> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19) {
  const T* elem_ptrs[19] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19 };
  return internal::NewContainerImpl<T, 19>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 19>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19);
}

template <typename T>
inline internal::NewContainerImpl<T, 20> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20) {
  const T* elem_ptrs[20] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20 };
  return internal::NewContainerImpl<T, 20>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 20>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20);
}

template <typename T>
inline internal::NewContainerImpl<T, 21> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21) {
  const T* elem_ptrs[21] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21 };
  return internal::NewContainerImpl<T, 21>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 21>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21);
}

template <typename T>
inline internal::NewContainerImpl<T, 22> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22) {
  const T* elem_ptrs[22] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22 };
  return internal::NewContainerImpl<T, 22>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 22>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22);
}

template <typename T>
inline internal::NewContainerImpl<T, 23> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23) {
  const T* elem_ptrs[23] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23 };
  return internal::NewContainerImpl<T, 23>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 23>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23);
}

template <typename T>
inline internal::NewContainerImpl<T, 24> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24) {
  const T* elem_ptrs[24] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24 };
  return internal::NewContainerImpl<T, 24>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 24>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24);
}

template <typename T>
inline internal::NewContainerImpl<T, 25> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25) {
  const T* elem_ptrs[25] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25 };
  return internal::NewContainerImpl<T, 25>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 25>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25);
}

template <typename T>
inline internal::NewContainerImpl<T, 26> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26) {
  const T* elem_ptrs[26] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26 };
  return internal::NewContainerImpl<T, 26>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 26>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26);
}

template <typename T>
inline internal::NewContainerImpl<T, 27> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27) {
  const T* elem_ptrs[27] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27 };
  return internal::NewContainerImpl<T, 27>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 27>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27);
}

template <typename T>
inline internal::NewContainerImpl<T, 28> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28) {
  const T* elem_ptrs[28] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28 };
  return internal::NewContainerImpl<T, 28>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 28>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28);
}

template <typename T>
inline internal::NewContainerImpl<T, 29> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29) {
  const T* elem_ptrs[29] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29 };
  return internal::NewContainerImpl<T, 29>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 29>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29);
}

template <typename T>
inline internal::NewContainerImpl<T, 30> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30) {
  const T* elem_ptrs[30] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30 };
  return internal::NewContainerImpl<T, 30>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 30>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30);
}

template <typename T>
inline internal::NewContainerImpl<T, 31> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31) {
  const T* elem_ptrs[31] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31 };
  return internal::NewContainerImpl<T, 31>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 31>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31);
}

template <typename T>
inline internal::NewContainerImpl<T, 32> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32) {
  const T* elem_ptrs[32] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32 };
  return internal::NewContainerImpl<T, 32>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 32>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32);
}

template <typename T>
inline internal::NewContainerImpl<T, 33> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33) {
  const T* elem_ptrs[33] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33 };
  return internal::NewContainerImpl<T, 33>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 33>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33);
}

template <typename T>
inline internal::NewContainerImpl<T, 34> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34) {
  const T* elem_ptrs[34] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34 };
  return internal::NewContainerImpl<T, 34>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 34>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34);
}

template <typename T>
inline internal::NewContainerImpl<T, 35> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35) {
  const T* elem_ptrs[35] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35 };
  return internal::NewContainerImpl<T, 35>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 35>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35);
}

template <typename T>
inline internal::NewContainerImpl<T, 36> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36) {
  const T* elem_ptrs[36] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36 };
  return internal::NewContainerImpl<T, 36>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 36>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36);
}

template <typename T>
inline internal::NewContainerImpl<T, 37> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37) {
  const T* elem_ptrs[37] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37 };
  return internal::NewContainerImpl<T, 37>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 37>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37);
}

template <typename T>
inline internal::NewContainerImpl<T, 38> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38) {
  const T* elem_ptrs[38] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38 };
  return internal::NewContainerImpl<T, 38>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 38>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38);
}

template <typename T>
inline internal::NewContainerImpl<T, 39> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39) {
  const T* elem_ptrs[39] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39 };
  return internal::NewContainerImpl<T, 39>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 39>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38,
    const char* const& e39) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38,
      e39);
}

template <typename T>
inline internal::NewContainerImpl<T, 40> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40) {
  const T* elem_ptrs[40] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40 };
  return internal::NewContainerImpl<T, 40>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 40>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38,
    const char* const& e39, const char* const& e40) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38,
      e39, e40);
}

template <typename T>
inline internal::NewContainerImpl<T, 41> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41) {
  const T* elem_ptrs[41] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41 };
  return internal::NewContainerImpl<T, 41>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 41>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38,
    const char* const& e39, const char* const& e40, const char* const& e41) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38,
      e39, e40, e41);
}

template <typename T>
inline internal::NewContainerImpl<T, 42> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42) {
  const T* elem_ptrs[42] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42 };
  return internal::NewContainerImpl<T, 42>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 42>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38,
    const char* const& e39, const char* const& e40, const char* const& e41,
    const char* const& e42) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38,
      e39, e40, e41, e42);
}

template <typename T>
inline internal::NewContainerImpl<T, 43> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43) {
  const T* elem_ptrs[43] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43 };
  return internal::NewContainerImpl<T, 43>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 43>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38,
    const char* const& e39, const char* const& e40, const char* const& e41,
    const char* const& e42, const char* const& e43) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38,
      e39, e40, e41, e42, e43);
}

template <typename T>
inline internal::NewContainerImpl<T, 44> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44) {
  const T* elem_ptrs[44] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44 };
  return internal::NewContainerImpl<T, 44>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 44>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38,
    const char* const& e39, const char* const& e40, const char* const& e41,
    const char* const& e42, const char* const& e43, const char* const& e44) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38,
      e39, e40, e41, e42, e43, e44);
}

template <typename T>
inline internal::NewContainerImpl<T, 45> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45) {
  const T* elem_ptrs[45] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45 };
  return internal::NewContainerImpl<T, 45>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 45>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38,
    const char* const& e39, const char* const& e40, const char* const& e41,
    const char* const& e42, const char* const& e43, const char* const& e44,
    const char* const& e45) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38,
      e39, e40, e41, e42, e43, e44, e45);
}

template <typename T>
inline internal::NewContainerImpl<T, 46> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46) {
  const T* elem_ptrs[46] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46 };
  return internal::NewContainerImpl<T, 46>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 46>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38,
    const char* const& e39, const char* const& e40, const char* const& e41,
    const char* const& e42, const char* const& e43, const char* const& e44,
    const char* const& e45, const char* const& e46) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38,
      e39, e40, e41, e42, e43, e44, e45, e46);
}

template <typename T>
inline internal::NewContainerImpl<T, 47> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47) {
  const T* elem_ptrs[47] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47 };
  return internal::NewContainerImpl<T, 47>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 47>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38,
    const char* const& e39, const char* const& e40, const char* const& e41,
    const char* const& e42, const char* const& e43, const char* const& e44,
    const char* const& e45, const char* const& e46, const char* const& e47) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38,
      e39, e40, e41, e42, e43, e44, e45, e46, e47);
}

template <typename T>
inline internal::NewContainerImpl<T, 48> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48) {
  const T* elem_ptrs[48] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48 };
  return internal::NewContainerImpl<T, 48>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 48>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38,
    const char* const& e39, const char* const& e40, const char* const& e41,
    const char* const& e42, const char* const& e43, const char* const& e44,
    const char* const& e45, const char* const& e46, const char* const& e47,
    const char* const& e48) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38,
      e39, e40, e41, e42, e43, e44, e45, e46, e47, e48);
}

template <typename T>
inline internal::NewContainerImpl<T, 49> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49) {
  const T* elem_ptrs[49] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49 };
  return internal::NewContainerImpl<T, 49>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 49>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38,
    const char* const& e39, const char* const& e40, const char* const& e41,
    const char* const& e42, const char* const& e43, const char* const& e44,
    const char* const& e45, const char* const& e46, const char* const& e47,
    const char* const& e48, const char* const& e49) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38,
      e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49);
}

template <typename T>
inline internal::NewContainerImpl<T, 50> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50) {
  const T* elem_ptrs[50] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50 };
  return internal::NewContainerImpl<T, 50>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 50>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38,
    const char* const& e39, const char* const& e40, const char* const& e41,
    const char* const& e42, const char* const& e43, const char* const& e44,
    const char* const& e45, const char* const& e46, const char* const& e47,
    const char* const& e48, const char* const& e49, const char* const& e50) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38,
      e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50);
}

template <typename T>
inline internal::NewContainerImpl<T, 51> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51) {
  const T* elem_ptrs[51] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51 };
  return internal::NewContainerImpl<T, 51>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 51>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38,
    const char* const& e39, const char* const& e40, const char* const& e41,
    const char* const& e42, const char* const& e43, const char* const& e44,
    const char* const& e45, const char* const& e46, const char* const& e47,
    const char* const& e48, const char* const& e49, const char* const& e50,
    const char* const& e51) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38,
      e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51);
}

template <typename T>
inline internal::NewContainerImpl<T, 52> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51, const T& e52) {
  const T* elem_ptrs[52] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51, &e52 };
  return internal::NewContainerImpl<T, 52>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 52>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38,
    const char* const& e39, const char* const& e40, const char* const& e41,
    const char* const& e42, const char* const& e43, const char* const& e44,
    const char* const& e45, const char* const& e46, const char* const& e47,
    const char* const& e48, const char* const& e49, const char* const& e50,
    const char* const& e51, const char* const& e52) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38,
      e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52);
}

template <typename T>
inline internal::NewContainerImpl<T, 53> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51, const T& e52,
    const T& e53) {
  const T* elem_ptrs[53] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51, &e52, &e53 };
  return internal::NewContainerImpl<T, 53>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 53>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38,
    const char* const& e39, const char* const& e40, const char* const& e41,
    const char* const& e42, const char* const& e43, const char* const& e44,
    const char* const& e45, const char* const& e46, const char* const& e47,
    const char* const& e48, const char* const& e49, const char* const& e50,
    const char* const& e51, const char* const& e52, const char* const& e53) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38,
      e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52,
      e53);
}

template <typename T>
inline internal::NewContainerImpl<T, 54> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51, const T& e52,
    const T& e53, const T& e54) {
  const T* elem_ptrs[54] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51, &e52, &e53, &e54 };
  return internal::NewContainerImpl<T, 54>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 54>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38,
    const char* const& e39, const char* const& e40, const char* const& e41,
    const char* const& e42, const char* const& e43, const char* const& e44,
    const char* const& e45, const char* const& e46, const char* const& e47,
    const char* const& e48, const char* const& e49, const char* const& e50,
    const char* const& e51, const char* const& e52, const char* const& e53,
    const char* const& e54) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38,
      e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52,
      e53, e54);
}

template <typename T>
inline internal::NewContainerImpl<T, 55> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51, const T& e52,
    const T& e53, const T& e54, const T& e55) {
  const T* elem_ptrs[55] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51, &e52, &e53, &e54, &e55 };
  return internal::NewContainerImpl<T, 55>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 55>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38,
    const char* const& e39, const char* const& e40, const char* const& e41,
    const char* const& e42, const char* const& e43, const char* const& e44,
    const char* const& e45, const char* const& e46, const char* const& e47,
    const char* const& e48, const char* const& e49, const char* const& e50,
    const char* const& e51, const char* const& e52, const char* const& e53,
    const char* const& e54, const char* const& e55) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38,
      e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52,
      e53, e54, e55);
}

template <typename T>
inline internal::NewContainerImpl<T, 56> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51, const T& e52,
    const T& e53, const T& e54, const T& e55, const T& e56) {
  const T* elem_ptrs[56] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51, &e52, &e53, &e54, &e55, &e56 };
  return internal::NewContainerImpl<T, 56>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 56>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38,
    const char* const& e39, const char* const& e40, const char* const& e41,
    const char* const& e42, const char* const& e43, const char* const& e44,
    const char* const& e45, const char* const& e46, const char* const& e47,
    const char* const& e48, const char* const& e49, const char* const& e50,
    const char* const& e51, const char* const& e52, const char* const& e53,
    const char* const& e54, const char* const& e55, const char* const& e56) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38,
      e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52,
      e53, e54, e55, e56);
}

template <typename T>
inline internal::NewContainerImpl<T, 57> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51, const T& e52,
    const T& e53, const T& e54, const T& e55, const T& e56, const T& e57) {
  const T* elem_ptrs[57] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51, &e52, &e53, &e54, &e55, &e56, &e57 };
  return internal::NewContainerImpl<T, 57>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 57>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38,
    const char* const& e39, const char* const& e40, const char* const& e41,
    const char* const& e42, const char* const& e43, const char* const& e44,
    const char* const& e45, const char* const& e46, const char* const& e47,
    const char* const& e48, const char* const& e49, const char* const& e50,
    const char* const& e51, const char* const& e52, const char* const& e53,
    const char* const& e54, const char* const& e55, const char* const& e56,
    const char* const& e57) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38,
      e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52,
      e53, e54, e55, e56, e57);
}

template <typename T>
inline internal::NewContainerImpl<T, 58> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51, const T& e52,
    const T& e53, const T& e54, const T& e55, const T& e56, const T& e57,
    const T& e58) {
  const T* elem_ptrs[58] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51, &e52, &e53, &e54, &e55, &e56, &e57, &e58 };
  return internal::NewContainerImpl<T, 58>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 58>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38,
    const char* const& e39, const char* const& e40, const char* const& e41,
    const char* const& e42, const char* const& e43, const char* const& e44,
    const char* const& e45, const char* const& e46, const char* const& e47,
    const char* const& e48, const char* const& e49, const char* const& e50,
    const char* const& e51, const char* const& e52, const char* const& e53,
    const char* const& e54, const char* const& e55, const char* const& e56,
    const char* const& e57, const char* const& e58) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38,
      e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52,
      e53, e54, e55, e56, e57, e58);
}

template <typename T>
inline internal::NewContainerImpl<T, 59> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51, const T& e52,
    const T& e53, const T& e54, const T& e55, const T& e56, const T& e57,
    const T& e58, const T& e59) {
  const T* elem_ptrs[59] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51, &e52, &e53, &e54, &e55, &e56, &e57, &e58,
      &e59 };
  return internal::NewContainerImpl<T, 59>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 59>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38,
    const char* const& e39, const char* const& e40, const char* const& e41,
    const char* const& e42, const char* const& e43, const char* const& e44,
    const char* const& e45, const char* const& e46, const char* const& e47,
    const char* const& e48, const char* const& e49, const char* const& e50,
    const char* const& e51, const char* const& e52, const char* const& e53,
    const char* const& e54, const char* const& e55, const char* const& e56,
    const char* const& e57, const char* const& e58, const char* const& e59) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38,
      e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52,
      e53, e54, e55, e56, e57, e58, e59);
}

template <typename T>
inline internal::NewContainerImpl<T, 60> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51, const T& e52,
    const T& e53, const T& e54, const T& e55, const T& e56, const T& e57,
    const T& e58, const T& e59, const T& e60) {
  const T* elem_ptrs[60] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51, &e52, &e53, &e54, &e55, &e56, &e57, &e58,
      &e59, &e60 };
  return internal::NewContainerImpl<T, 60>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 60>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38,
    const char* const& e39, const char* const& e40, const char* const& e41,
    const char* const& e42, const char* const& e43, const char* const& e44,
    const char* const& e45, const char* const& e46, const char* const& e47,
    const char* const& e48, const char* const& e49, const char* const& e50,
    const char* const& e51, const char* const& e52, const char* const& e53,
    const char* const& e54, const char* const& e55, const char* const& e56,
    const char* const& e57, const char* const& e58, const char* const& e59,
    const char* const& e60) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38,
      e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52,
      e53, e54, e55, e56, e57, e58, e59, e60);
}

template <typename T>
inline internal::NewContainerImpl<T, 61> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51, const T& e52,
    const T& e53, const T& e54, const T& e55, const T& e56, const T& e57,
    const T& e58, const T& e59, const T& e60, const T& e61) {
  const T* elem_ptrs[61] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51, &e52, &e53, &e54, &e55, &e56, &e57, &e58,
      &e59, &e60, &e61 };
  return internal::NewContainerImpl<T, 61>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 61>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38,
    const char* const& e39, const char* const& e40, const char* const& e41,
    const char* const& e42, const char* const& e43, const char* const& e44,
    const char* const& e45, const char* const& e46, const char* const& e47,
    const char* const& e48, const char* const& e49, const char* const& e50,
    const char* const& e51, const char* const& e52, const char* const& e53,
    const char* const& e54, const char* const& e55, const char* const& e56,
    const char* const& e57, const char* const& e58, const char* const& e59,
    const char* const& e60, const char* const& e61) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38,
      e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52,
      e53, e54, e55, e56, e57, e58, e59, e60, e61);
}

template <typename T>
inline internal::NewContainerImpl<T, 62> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51, const T& e52,
    const T& e53, const T& e54, const T& e55, const T& e56, const T& e57,
    const T& e58, const T& e59, const T& e60, const T& e61, const T& e62) {
  const T* elem_ptrs[62] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51, &e52, &e53, &e54, &e55, &e56, &e57, &e58,
      &e59, &e60, &e61, &e62 };
  return internal::NewContainerImpl<T, 62>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 62>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38,
    const char* const& e39, const char* const& e40, const char* const& e41,
    const char* const& e42, const char* const& e43, const char* const& e44,
    const char* const& e45, const char* const& e46, const char* const& e47,
    const char* const& e48, const char* const& e49, const char* const& e50,
    const char* const& e51, const char* const& e52, const char* const& e53,
    const char* const& e54, const char* const& e55, const char* const& e56,
    const char* const& e57, const char* const& e58, const char* const& e59,
    const char* const& e60, const char* const& e61, const char* const& e62) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38,
      e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52,
      e53, e54, e55, e56, e57, e58, e59, e60, e61, e62);
}

template <typename T>
inline internal::NewContainerImpl<T, 63> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51, const T& e52,
    const T& e53, const T& e54, const T& e55, const T& e56, const T& e57,
    const T& e58, const T& e59, const T& e60, const T& e61, const T& e62,
    const T& e63) {
  const T* elem_ptrs[63] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51, &e52, &e53, &e54, &e55, &e56, &e57, &e58,
      &e59, &e60, &e61, &e62, &e63 };
  return internal::NewContainerImpl<T, 63>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 63>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38,
    const char* const& e39, const char* const& e40, const char* const& e41,
    const char* const& e42, const char* const& e43, const char* const& e44,
    const char* const& e45, const char* const& e46, const char* const& e47,
    const char* const& e48, const char* const& e49, const char* const& e50,
    const char* const& e51, const char* const& e52, const char* const& e53,
    const char* const& e54, const char* const& e55, const char* const& e56,
    const char* const& e57, const char* const& e58, const char* const& e59,
    const char* const& e60, const char* const& e61, const char* const& e62,
    const char* const& e63) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38,
      e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52,
      e53, e54, e55, e56, e57, e58, e59, e60, e61, e62, e63);
}

template <typename T>
inline internal::NewContainerImpl<T, 64> NewContainer(const T& e1, const T& e2,
    const T& e3, const T& e4, const T& e5, const T& e6, const T& e7,
    const T& e8, const T& e9, const T& e10, const T& e11, const T& e12,
    const T& e13, const T& e14, const T& e15, const T& e16, const T& e17,
    const T& e18, const T& e19, const T& e20, const T& e21, const T& e22,
    const T& e23, const T& e24, const T& e25, const T& e26, const T& e27,
    const T& e28, const T& e29, const T& e30, const T& e31, const T& e32,
    const T& e33, const T& e34, const T& e35, const T& e36, const T& e37,
    const T& e38, const T& e39, const T& e40, const T& e41, const T& e42,
    const T& e43, const T& e44, const T& e45, const T& e46, const T& e47,
    const T& e48, const T& e49, const T& e50, const T& e51, const T& e52,
    const T& e53, const T& e54, const T& e55, const T& e56, const T& e57,
    const T& e58, const T& e59, const T& e60, const T& e61, const T& e62,
    const T& e63, const T& e64) {
  const T* elem_ptrs[64] = { &e1, &e2, &e3, &e4, &e5, &e6, &e7, &e8, &e9, &e10,
      &e11, &e12, &e13, &e14, &e15, &e16, &e17, &e18, &e19, &e20, &e21, &e22,
      &e23, &e24, &e25, &e26, &e27, &e28, &e29, &e30, &e31, &e32, &e33, &e34,
      &e35, &e36, &e37, &e38, &e39, &e40, &e41, &e42, &e43, &e44, &e45, &e46,
      &e47, &e48, &e49, &e50, &e51, &e52, &e53, &e54, &e55, &e56, &e57, &e58,
      &e59, &e60, &e61, &e62, &e63, &e64 };
  return internal::NewContainerImpl<T, 64>(elem_ptrs);
}

inline internal::NewContainerImpl<const char*, 64>
NewContainer(const char* const& e1, const char* const& e2,
    const char* const& e3, const char* const& e4, const char* const& e5,
    const char* const& e6, const char* const& e7, const char* const& e8,
    const char* const& e9, const char* const& e10, const char* const& e11,
    const char* const& e12, const char* const& e13, const char* const& e14,
    const char* const& e15, const char* const& e16, const char* const& e17,
    const char* const& e18, const char* const& e19, const char* const& e20,
    const char* const& e21, const char* const& e22, const char* const& e23,
    const char* const& e24, const char* const& e25, const char* const& e26,
    const char* const& e27, const char* const& e28, const char* const& e29,
    const char* const& e30, const char* const& e31, const char* const& e32,
    const char* const& e33, const char* const& e34, const char* const& e35,
    const char* const& e36, const char* const& e37, const char* const& e38,
    const char* const& e39, const char* const& e40, const char* const& e41,
    const char* const& e42, const char* const& e43, const char* const& e44,
    const char* const& e45, const char* const& e46, const char* const& e47,
    const char* const& e48, const char* const& e49, const char* const& e50,
    const char* const& e51, const char* const& e52, const char* const& e53,
    const char* const& e54, const char* const& e55, const char* const& e56,
    const char* const& e57, const char* const& e58, const char* const& e59,
    const char* const& e60, const char* const& e61, const char* const& e62,
    const char* const& e63, const char* const& e64) {
  return NewContainer<const char*>(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10,
      e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24,
      e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38,
      e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52,
      e53, e54, e55, e56, e57, e58, e59, e60, e61, e62, e63, e64);
}

}  // namespace gtl
}  // namespace util

#endif  // UTIL_GTL_CONTAINER_LITERAL_GENERATED_H_
